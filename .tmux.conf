# switch key bind
set -g prefix C-s
unbind C-b
bind C-s send-prefix

set-option -g history-limit 5000
set-option -g default-command "reattach-to-user-namespace -l /usr/local/bin/fish"
set -g default-terminal "screen-256color"
set -g default-shell /usr/local/bin/fish

# Status bar
set -g status-fg white
set -g status-bg default
set -g status-justify centre
set -g status-left-length 20
set -g status-right "#[fg=green]][#[fg=magenta]#(osascript ~/bin/listening_to.scpt) #[fg=cyan]%m/%d #[fg=green]%H:%M]"
set -g status-left "#{prefix_highlight}#[fg=green][#(hostname | awk -F. '{print $1}').#S]["
setw -g window-status-current-format '#[fg=red,bg=default]( #I:#W )#[fg=default]'
setw -g window-status-activity-attr none
setw -g window-status-activity-fg yellow

# Per-pane status
set -g pane-border-status top
set -g pane-border-format "#{pane_title}"
set-option -g pane-active-border-fg colour17
# Auto hide pane-border-status line when only one pane is displayed (see tmux/tmux#566)
set-hook -g 'after-new-window'   'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-kill-pane'    'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'pane-exited'        'run-shell -b "if [ \#{window_panes} -eq 1 ]; then tmux set pane-border-status off; fi"'
set-hook -g 'after-split-window' 'run-shell -b "if [ \#{window_panes} -gt 1 ]; then tmux set pane-border-status top; fi"'
# This seems to work weirdly with fish... need to revisit
bind-key T command-prompt -p "New title:" 'select-pane -T "%%"'

# 0 is too far from 1 :)
set -g base-index 1
setw -g pane-base-index 1

# use vi type movements
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind u previous-window
bind i next-window

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# easy to remember splitting
bind \ split-window -h
bind - split-window

# border color
set -g pane-active-border-bg cyan
set -g pane-border-fg cyan

# mouse type things
set-option -g bell-action any
set-option -g visual-bell off
setw -g monitor-activity on
setw -g mouse on

bind z switch-client -l

# useful shortcuts
bind r source-file ~/.tmux.conf\; display-message " Config reloaded.."

# make copy and paste similar to vim
setw -g mode-keys vi
unbind [
unbind p
bind -T copy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"
bind p paste-buffer

# clear screen
bind-key K send-keys "clear && tmux clear-history" \; send-keys "Enter"
